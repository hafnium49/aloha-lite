version: "3.8"
services:
  api-gateway:
    image: traefik:v3.0
    command:
      - "--providers.docker=true"
      - "--entrypoints.web.address=:8080"
    ports: ["8080:8080"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  phosphobot:
    build: ./phosphobot/phosphobot
    ports:
      - "5555:5555"  # ZMQ state publisher
      - "80:80"      # HTTP API
    environment:
      - ROBOT_TYPE=${ROBOT_TYPE:-simulator}
      - ZMQ_PORT=5555
    volumes:
      - ./data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-miniokey}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-miniosecret}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  robot-service:
    build: ./robot_service
    environment:
      - PHOS_URL=${PHOS_URL:-http://phosphobot}
      - MODEL_ID=${MODEL_ID:-phospho-app/so101_dispense_v1-groot}
      - TARGET_POSE=${TARGET_POSE:-[0.0,1.57,0.0,-1.57,0.0,1.57]}
      - TOL=${TOL:-0.03}
    labels:
      - "traefik.http.routers.robot.rule=PathPrefix(`/robot`)"
      - "traefik.http.routers.robot.entrypoints=web"
    depends_on:
      api-gateway:
        condition: service_started
      phosphobot:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 30s
      timeout: 10s
      retries: 3

  vision-bridge:
    build: ./vision_bridge
    environment:
      - PHOS_URL=${PHOS_URL:-http://phosphobot}
      - S3_ENDPOINT=${S3_ENDPOINT:-http://minio:9000}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-miniokey}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-miniosecret}
      - BUCKET=${BUCKET:-snapshots}
    depends_on:
      robot-service:
        condition: service_healthy
      phosphobot:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: ./frontend
    labels:
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.http.routers.frontend.entrypoints=web"

volumes:
  minio_data:
